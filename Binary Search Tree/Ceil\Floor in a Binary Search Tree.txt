Problem Statement: You are given a root binary search tree and an integer x . Your task is to find the Ceil of x in the tree.
Note: Ceil(x) is a number that is either equal to x or is immediately greater than x.
If Ceil could not be found, return -1.

Ceil-> value choti ha to right jao, badi ho to ans ho skti ha, same ho to yhi ha
    int findCeil(Node root, int x) {
        // code here
        int ans=-1;
        while(root!=null)
        {
            if(root.data==x)
            {
                return root.data;
            }
            else if(root.data<x)
            {
                root=root.right;
            }
            else
            {
                ans=root.data;
                root=root.left;
            }
        }
        return ans;
    }

Floor-> value badi ha to left jao, choti ho to ans ho skti ha, same ho to yhi ha
    public static int floor(Node root, int x) {
        // Code here
        int ans=-1;
        while(root!=null)
        {
            if(root.data==x)
            {
                return root.data;
            }
            else if(root.data<x)
            {
                ans=root.data;
                root=root.right;
            }
            else
            {
                root=root.left;
            }
        }
        return ans;
    }

Time Complexity: O(log N) average, O(N) worst case
Space Complexity: O(1)
