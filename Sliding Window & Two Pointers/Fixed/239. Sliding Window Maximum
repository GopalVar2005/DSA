Problem Statement:  You are given an array of integers nums, there is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position.
Return the max sliding window.

class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        int[] ans=new int[nums.length-k+1];
        int i=0, j=0, idx=0;
        Deque<Integer> q=new ArrayDeque<>();
        while(j<nums.length)
        {
            while(!q.isEmpty() && nums[q.peekLast()]<nums[j])
            {
                q.removeLast();
            }
            q.addLast(j);
            if(j-i+1<k)
            {
                j++;
            }
            else
            {
                ans[idx++]=nums[q.peekFirst()];
                i++;
                while(!q.isEmpty() && q.peekFirst()<i)
                {
                    q.removeFirst();
                }
                j++;
            }
        }
        return ans;
    }
}
TC-O(N)
SC-O(K)
