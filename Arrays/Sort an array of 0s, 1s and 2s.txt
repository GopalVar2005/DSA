Problem Statement: Given an array consisting of only 0s, 1s, and 2s. Write a program to in-place sort the array without using inbuilt sort functions. ( Expected: Single pass-O(N) and constant space)

Appr1: Using Arrays.sort
TC-(NlogN)
SC-O(1)

Appr2: Finding count of 0 and 2 and filling them then rest with 1
TC-O(N)
SC-O(1)

Appr3: Dutch National flag algorithm. 
  0 - (low-1) -> 0
  low - (mid-1) -> 1
  mid - (high) -> unsorted
  (high+1) - (n-1) -> 2
    public void sortColors(int[] nums) {
        int low=0, mid=0, high=nums.length-1;
        while(mid<=high)
        {
            if(nums[mid]==0)
            {
                int temp=nums[mid];
                nums[mid]=nums[low];
                nums[low]=temp;
                low++;
                mid++;
            }
            else if(nums[mid]==1)
            {
                mid++;
            }
            else
            {
                int temp=nums[mid];
                nums[mid]=nums[high];
                nums[high]=temp;
                high--;
            }
        }
    }
TC-O(N)
SC-O(1)
