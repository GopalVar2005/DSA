Problem Statement: Given an array nums, return true if the array was originally sorted in non-decreasing order, then rotated some number of positions (including zero). Otherwise, return false.
There may be duplicates in the original array.

Appr1: 
sorted array ki madad se og array ma starting dundke usse check kro
class Solution {
    public boolean check(int[] nums) {
        // 2 1 3 4 
        // 1 2 3 4
        // 6 10 6
        // 6 6 10
        int n=nums.length;
        int[] og=new int[n];
        for(int i=0;i<n;i++)
        {
            og[i]=nums[i];
        }
        Arrays.sort(nums);
        //boolean ans=false;
        for(int i=0;i<n;i++)
        {
            if(og[i]==nums[0])
            {
                int idx=1;
                boolean cur=true;
                for(int j=0;j<n-1;j++)
                {
                    if(nums[idx]!=og[(i+idx)%n])
                    {
                        cur=false;
                    }
                    idx++;
                }
                if(cur)
                {
                    return true;
                }
            }
        }
        return false;
    }
}
TC-O(N2)
SC-O(N)

Appr2:
Based on observation
1 2 3 4 5 
5 1 2 3 4 
4 5 1 2 3 
3 4 5 1 2 
2 3 4 5 1

6 6 10
10 6 6 
6 10 6
ya to nums[i] nums[i+1] se rotated point pr bda hoga ya hoga hi nhi aur hota h to array rotate se phle sort nhi thi
TC-O(N)
SC-O(1)
