Problem Statement: Given an array, find the second smallest and second largest element in the array. Print ‘-1’ in the event that either of them doesn’t exist

Appr1:
Sort->arr[n-2];
Problem: numbers must be unique

Appr2:
Arrays.sort(arr);
for(int i=n-2;i>=0;i--)
{
    if(arr[i]!=largest)
    {
        secondLargest=arr[i];
        break;
    }
}
O(N)

Appr3:
In first pass, find the largest
In second pass, find the second largest
O(2N)

Appr4:
class Solution {
    public int getSecondLargest(int[] arr) {
        int largest=arr[0];
        int second=-1;
        for(int i=1;i<arr.length;i++)
        {
            if(arr[i]>largest)
            {
                second=largest;
                largest=arr[i];
            }
            if(arr[i]>second && arr[i]!=largest)
            {
                second=arr[i];
            }
        }
        return second;
        
    }
}

TC-O(N)
SC-O(1)
