Problem Statement:  Given K painters to paint N boards where each painter takes 1 unit of time to paint 1 unit of boards i.e. if the length of a particular board is 5, it will take 5 units of time to paint the board. Compute the minimum amount of time to paint all the boards.

import java.util.*;
public class Main {
    public static void main(String args[]) {
        Scanner sc=new Scanner(System.in); int nop=sc.nextInt();
            int n=sc.nextInt();
            int[] board=new int[n];
            int sum=0;
            int max=0;
            for(int i=0;i<n;i++)
            {
                board[i]=sc.nextInt();
                sum+=board[i];
                max=Math.max(max,board[i]);
            }
            System.out.println(find(board,n,nop,sum,max));
        
    }
    public static int find(int[] board,int n,int nop,int sum,int max)
    {
        int lo=max;
        int hi=sum;
        while(lo<=hi)
        {
            int mid=lo+(hi-lo)/2;
            if(isPossible(board,nop,mid))
            {
                hi=mid-1;
            }
            else
            {
                lo=mid+1;
            }
        }
        return lo;
    }
    public static boolean isPossible(int[] board,int nop,int mid)
    {
        int painter=1;
        int work=0;
        for(int i=0;i<board.length;)
        {
            if(work+board[i]<=mid)
            {
                work+=board[i];
                i++;
            }
            else
            {
                painter++;
                work=0;
            }
            if(painter>nop)
            {
                return false;
            }
        }
        return true;
    }
}
Time Complexity: O(n Â· log(sum))

Space Complexity: O(1)
