Problem Statement:  Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.
The overall run time complexity should be O(log (m+n)).

class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        if(nums1.length>nums2.length)
        {
            int[] temp=nums1;
            nums1=nums2;
            nums2=temp;
        }
        int lo=0;
        int hi=nums1.length;
        int total=nums1.length+nums2.length;
        int half=(total+1)/2;
        while(lo<=hi)
        {
            int al=lo+(hi-lo)/2;
            int bl=half-al;
            int alm1=al==0?Integer.MIN_VALUE:nums1[al-1];
            int blm1=bl==0?Integer.MIN_VALUE:nums2[bl-1];
            int aleft=al==nums1.length?Integer.MAX_VALUE:nums1[al];
            int bleft=bl==nums2.length?Integer.MAX_VALUE:nums2[bl];
            if(alm1<=bleft && blm1<=aleft)
            {
                double ans;
                if(total%2==0)
                {
                    ans=(Math.max(alm1, blm1)+Math.min(aleft, bleft))/2.0;
                }
                else
                {
                    ans=Math.max(alm1, blm1)/1.0;
                }
                return ans;
            }
            else if(blm1>aleft)
            {
                lo=al+1;
            }
            else if(alm1>bleft)
            {
                hi=al-1;
            }
        }
        return 0.0;
    }
}
| Complexity | Value             |
| ---------- | ----------------- |
| Time (TC)  | O(log(min(n, m))) |
| Space (SC) | O(1)              |
