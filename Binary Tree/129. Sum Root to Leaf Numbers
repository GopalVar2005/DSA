You are given the root of a binary tree containing digits from 0 to 9 only.
Each root-to-leaf path in the tree represents a number.
For example, the root-to-leaf path 1 -> 2 -> 3 represents the number 123.
Return the total sum of all root-to-leaf numbers. Test cases are generated so that the answer will fit in a 32-bit integer.
A leaf node is a node with no children

Appr: simple ans*1+node.val krke chlo end ma left + right bhjdo ab null tk jaoge to 0 bhjna pdega to leaf pr hi ans bhjdo

    public int sumNumbers(TreeNode root) {
        return find(root,0);
    }
    public int find(TreeNode root,int ans)
    {
        if(root==null)
        {
            return 0;
        }
        if(root.left==null && root.right==null)
        {
            ans=ans*10+root.val;
            return ans;
        }
        int left=find(root.left,ans*10+root.val);
        int right=find(root.right,ans*10+root.val);
        return left+right;
    }
